{"version":3,"sources":["../file:/C:/ProgramData/cocos/editors/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/file:/C:/ProgramData/cocos/editors/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/C:/Users/ADAM.CHEN/Desktop/admin/Github/WildMoosw-AI/SlotGameDemo/assets/scripts/file:/C:/Users/ADAM.CHEN/Desktop/admin/Github/WildMoosw-AI/SlotGameDemo/assets/scripts/ReelView.ts","../file:/C:/Users/ADAM.CHEN/Desktop/admin/Github/WildMoosw-AI/SlotGameDemo/assets/scripts/file:/C:/Users/ADAM.CHEN/Desktop/admin/Github/WildMoosw-AI/SlotGameDemo/assets/scripts/SlotController.ts","../file:/C:/Users/ADAM.CHEN/Desktop/admin/Github/WildMoosw-AI/SlotGameDemo/assets/scripts/file:/C:/Users/ADAM.CHEN/Desktop/admin/Github/WildMoosw-AI/SlotGameDemo/assets/scripts/Symbol.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Node","_dec3","_dec4","_descriptor","_applyDecoratedDescriptor","_class2","_Component","DebugViewRuntimeControl","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","_inheritsLoose","_proto","prototype","start","this","node","parent","getComponent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","console","error","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","onLoad","update","deltaTime","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","Prefab","SpriteFrame","ReelView","_descriptor4","_descriptor5","symbolNames","visibleSymbols","isSpinning","speed","symbolHeight","prefabUI","symbolPrefab","data","initSymbols","step","spacing","symbolNode","setParent","index","Math","floor","random","frame","symbolSpriteFrames","Symbol","init","push","spin","_this2","roundsPerSecond","spinEndTime","performance","now","spinDuration","requestAnimationFrame","updateSpin","_step","deltaY","_iterator","_createForOfIteratorHelperLoose","done","value","pos","getPosition","snapToCenter","_step2","closest","minDist","abs","_iterator2","dist","_step3","offset","_iterator3","z","getResultSymbol","_step4","_iterator4","symbolName","getSymbols","result","_i","_targetYs","_step5","targetY","_iterator5","playWinEffectAtRow","rowIndex","_step6","_iterator6","symbol","playWinEffect","symbolPayTable","M1","M2","M3","M4","M5","WILD","SC","SlotController","onSpinButtonClick","log","r1","reel1","r2","reel2","r3","reel3","setTimeout","_r1$getSymbols","r1top","r1mid","r1bot","_r2$getSymbols","r2top","r2mid","r2bot","_r3$getSymbols","r3top","r3mid","r3bot","lineNames","allLines","rowMap","winLines","totalWin","join","_allLines$i","s1","s2","s3","isSameOrWild","a","b","_symbolPayTable$coreS","coreSymbol","find","s","payout","rows","reels","j","type","Sprite","spriteFrame","sprite","uiOpacity","UIOpacity","addComponent","opacity","tween","repeat","to"],"mappings":"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","file":"all.js","sourcesContent":["import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('internal.DebugViewRuntimeControl')\r\nexport class DebugViewRuntimeControl extends Component {\r\n    @property(Node)\r\n    compositeModeToggle: Node | null = null;\r\n    @property(Node)\r\n    singleModeToggle: Node | null = null;\r\n    @property(Node)\r\n    EnableAllCompositeModeButton: Node | null = null;\r\n\t_single: number = 0;\r\n\r\n    private strSingle: string[] = [\r\n        'No Single Debug',\r\n        'Vertex Color',\r\n        'Vertex Normal',\r\n        'Vertex Tangent',\r\n        'World Position',\r\n        'Vertex Mirror',\r\n        'Face Side',\r\n        'UV0',\r\n        'UV1',\r\n        'UV Lightmap',\r\n        'Project Depth',\r\n        'Linear Depth',\r\n\r\n        'Fragment Normal',\r\n        'Fragment Tangent',\r\n        'Fragment Binormal',\r\n        'Base Color',\r\n        'Diffuse Color',\r\n        'Specular Color',\r\n        'Transparency',\r\n        'Metallic',\r\n        'Roughness',\r\n        'Specular Intensity',\r\n        'IOR',\r\n\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Direct All',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Env All',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Fresnel',\r\n        'Direct Transmit Diffuse',\r\n        'Direct Transmit Specular',\r\n        'Env Transmit Diffuse',\r\n        'Env Transmit Specular',\r\n        'Transmit All',\r\n        'Direct Internal Specular',\r\n        'Env Internal Specular',\r\n        'Internal All',\r\n\r\n        'Fog',\r\n    ];\r\n    private strComposite: string[] = [\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Normal Map',\r\n        'Fog',\r\n\r\n        'Tone Mapping',\r\n        'Gamma Correction',\r\n\r\n        'Fresnel',\r\n        'Transmit Diffuse',\r\n        'Transmit Specular',\r\n        'Internal Specular',\r\n        'TT',\r\n    ];\r\n    private strMisc: string[] = [\r\n        'CSM Layer Coloration',\r\n        'Lighting With Albedo',\r\n    ];\r\n\r\n    private compositeModeToggleList: Node[] = [];\r\n    private singleModeToggleList: Node[] = [];\r\n    private miscModeToggleList: Node[] = [];\r\n    private textComponentList: RichText[] = [];\r\n    private labelComponentList: Label[] = [];\r\n    private textContentList: string[] = [];\r\n    private hideButtonLabel: Label;\r\n    start() {\r\n        // get canvas resolution\r\n        const canvas = this.node.parent.getComponent(Canvas);\r\n        if (!canvas) {\r\n            console.error('debug-view-runtime-control should be child of Canvas');\r\n            return;\r\n        }\r\n\r\n        const uiTransform = this.node.parent.getComponent(UITransform);\r\n        const halfScreenWidth = uiTransform.width * 0.5;\r\n        const halfScreenHeight = uiTransform.height * 0.5;\r\n\r\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\r\n        const width = 200, height = 20;\r\n\r\n        // new nodes\r\n        const miscNode = this.node.getChildByName('MiscMode');\r\n        const buttonNode = instantiate(miscNode);\r\n        buttonNode.parent = this.node;\r\n        buttonNode.name = 'Buttons';\r\n        const titleNode = instantiate(miscNode);\r\n        titleNode.parent = this.node;\r\n        titleNode.name = 'Titles';\r\n\r\n        // title\r\n        for (let i = 0; i < 2; i++) {\r\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\r\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\r\n            newLabel.setScale(0.75, 0.75, 0.75);\r\n            newLabel.parent = titleNode;\r\n            const labelComponent = newLabel.getComponent(Label);\r\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\r\n            labelComponent.color = Color.WHITE;\r\n            labelComponent.overflow = 0;\r\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        }\r\n\r\n        y -= height;\r\n        // single\r\n        let currentRow = 0;\r\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\r\n            if (i === this.strSingle.length >> 1) {\r\n                x += width;\r\n                currentRow = 0;\r\n            }\r\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\r\n            newNode.setPosition(x, y - height * currentRow, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.singleModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strSingle[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\r\n\r\n            this.singleModeToggleList[i] = newNode;\r\n        }\r\n\r\n        x += width;\r\n        // buttons\r\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\r\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\r\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\r\n        this.EnableAllCompositeModeButton.parent = buttonNode;\r\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\r\n        changeColorButton.setPosition(x + 90, y, 0.0);\r\n        changeColorButton.setScale(0.5, 0.5, 0.5);\r\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\r\n        changeColorButton.parent = buttonNode;\r\n        labelComponent = changeColorButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'TextColor';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\r\n        HideButton.setPosition(x + 200, y, 0.0);\r\n        HideButton.setScale(0.5, 0.5, 0.5);\r\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\r\n        HideButton.parent = this.node.parent;\r\n        labelComponent = HideButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'Hide UI';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        this.hideButtonLabel = labelComponent;\r\n\r\n        // misc\r\n        y -= 40;\r\n        for (let i = 0; i < this.strMisc.length; i++) {\r\n            const newNode = instantiate(this.compositeModeToggle);\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = miscNode;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strMisc[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            const toggleComponent = newNode.getComponent(Toggle);\r\n            toggleComponent.isChecked = i ? true : false;\r\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\r\n            this.miscModeToggleList[i] = newNode;\r\n        }\r\n\r\n        // composite\r\n        y -= 150;\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.compositeModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strComposite[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\r\n\r\n            this.compositeModeToggleList[i] = newNode;\r\n        }\r\n    }\r\n\r\n    isTextMatched(textUI, textDescription) : boolean {\r\n        let tempText = new String(textUI);\r\n        const findIndex = tempText.search('>');\r\n        if (findIndex === -1) {\r\n            return textUI === textDescription;\r\n        } else {\r\n            tempText = tempText.substr(findIndex + 1);\r\n            tempText = tempText.substr(0, tempText.search('<'));\r\n            return tempText === textDescription;\r\n        }\r\n    }\r\n    toggleSingleMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strSingle.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\r\n                debugView.singleMode = i;\r\n            }\r\n        }\r\n    }\r\n    toggleCompositeMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\r\n                debugView.enableCompositeMode(i, toggle.isChecked);\r\n            }\r\n        }\r\n    }\r\n    toggleLightingWithAlbedo(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.lightingWithAlbedo = toggle.isChecked;\r\n    }\r\n    toggleCSMColoration(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.csmLayerColoration = toggle.isChecked;\r\n    }\r\n    enableAllCompositeMode(button: Button) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.enableAllCompositeMode(true);\r\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\r\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\r\n            toggleComponent.isChecked = true;\r\n        }\r\n\r\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\r\n        toggleComponent.isChecked = false;\r\n        debugView.csmLayerColoration = false;\r\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\r\n        toggleComponent.isChecked = true;\r\n        debugView.lightingWithAlbedo = true;\r\n    }\r\n    hideUI(button: Button) {\r\n        const titleNode = this.node.getChildByName('Titles');\r\n        const activeValue = !titleNode.active;\r\n        this.singleModeToggleList[0].parent.active = activeValue;\r\n        this.miscModeToggleList[0].parent.active = activeValue;\r\n        this.compositeModeToggleList[0].parent.active = activeValue;\r\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\r\n        titleNode.active = activeValue;\r\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\r\n    }\r\n\r\n    private _currentColorIndex = 0;\r\n    private strColor: string[] = [\r\n        '<color=#ffffff>',\r\n        '<color=#000000>',\r\n        '<color=#ff0000>',\r\n        '<color=#00ff00>',\r\n        '<color=#0000ff>',\r\n    ];\r\n    private color: Color[] = [\r\n        Color.WHITE,\r\n        Color.BLACK,\r\n        Color.RED,\r\n        Color.GREEN,\r\n        Color.BLUE,\r\n    ];\r\n    changeTextColor(button: Button) {\r\n        this._currentColorIndex++;\r\n        if (this._currentColorIndex >= this.strColor.length) {\r\n            this._currentColorIndex = 0;\r\n        }\r\n        for (let i = 0; i < this.textComponentList.length; i++) {\r\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\r\n        }\r\n        for (let i = 0; i < this.labelComponentList.length; i++) {\r\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n","import { _decorator, Component, Node, Prefab, instantiate, SpriteFrame, UITransform } from 'cc';\r\nimport { Symbol } from './Symbol';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ReelView')\r\nexport class ReelView extends Component {\r\n    @property(Prefab)\r\n    symbolPrefab: Prefab = null; // 預製 Symbol\r\n\r\n    @property([SpriteFrame])\r\n    symbolSpriteFrames: SpriteFrame[] = []; // 對應圖案\r\n\r\n    @property\r\n    spacing: number = 10; // Symbol 間距\r\n\r\n    @property\r\n    roundsPerSecond: number = 3; // 每秒轉幾圈\r\n\r\n    @property\r\n    spinDuration: number = 2.0; // 轉動時間\r\n\r\n    private symbolNames: string[] = ['M1', 'M2', 'M3', 'M4', 'M5'];\r\n    private visibleSymbols: Node[] = []; // 當前畫面上 Symbol\r\n\r\n    private isSpinning: boolean = false;\r\n    private speed: number = 1000;\r\n    private symbolHeight: number = 0;\r\n\r\n    start() {\r\n        const prefabUI = this.symbolPrefab.data.getComponent(UITransform);\r\n        this.symbolHeight = prefabUI.height; // 取得 prefab 高度\r\n        this.initSymbols(); // 初始化符號\r\n    }\r\n\r\n    initSymbols() {\r\n        this.visibleSymbols = [];\r\n        const step = this.symbolHeight + this.spacing;\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            const symbolNode = instantiate(this.symbolPrefab);\r\n            symbolNode.setParent(this.node);\r\n\r\n            const y = step * (2 - i); // 垂直排列\r\n            symbolNode.setPosition(0, y, 0);\r\n\r\n            const index = Math.floor(Math.random() * this.symbolNames.length);\r\n            const name = this.symbolNames[index];\r\n            const frame = this.symbolSpriteFrames[index];\r\n\r\n            const symbol = symbolNode.getComponent(Symbol);\r\n            symbol.init(name, frame);\r\n\r\n            this.visibleSymbols.push(symbolNode);\r\n        }\r\n    }\r\n\r\n    spin() {\r\n        if (this.isSpinning) return;\r\n        this.isSpinning = true;\r\n\r\n        const step = this.symbolHeight + this.spacing;\r\n        this.speed = step * this.roundsPerSecond * 5;\r\n\r\n        const spinEndTime = performance.now() + this.spinDuration * 1000;\r\n\r\n        const updateSpin = () => {\r\n            const now = performance.now();\r\n            const deltaY = this.speed * 0.016; // 每幀移動距離\r\n\r\n            for (let symbolNode of this.visibleSymbols) {\r\n                let pos = symbolNode.getPosition();\r\n                pos.y -= deltaY;\r\n\r\n                // 超出畫面下方，從上補一個新的\r\n                if (pos.y < -step * 2.5) {\r\n                    pos.y += step * 5;\r\n\r\n                    const index = Math.floor(Math.random() * this.symbolNames.length);\r\n                    const name = this.symbolNames[index];\r\n                    const frame = this.symbolSpriteFrames[index];\r\n\r\n                    const symbol = symbolNode.getComponent(Symbol);\r\n                    symbol.init(name, frame);\r\n                }\r\n\r\n                symbolNode.setPosition(pos);\r\n            }\r\n\r\n            if (now < spinEndTime) {\r\n                requestAnimationFrame(updateSpin);\r\n            } else {\r\n                this.snapToCenter(step); // 補對齊\r\n                this.isSpinning = false;\r\n            }\r\n        };\r\n\r\n        requestAnimationFrame(updateSpin);\r\n    }\r\n\r\n    snapToCenter(step: number) {\r\n        // 尋找最靠近 Y=0 的 Symbol\r\n        let closest = this.visibleSymbols[0];\r\n        let minDist = Math.abs(closest.getPosition().y);\r\n\r\n        for (let node of this.visibleSymbols) {\r\n            const dist = Math.abs(node.getPosition().y);\r\n            if (dist < minDist) {\r\n                closest = node;\r\n                minDist = dist;\r\n            }\r\n        }\r\n\r\n        const offset = closest.getPosition().y;\r\n\r\n        // 全部調整補對齊\r\n        for (let node of this.visibleSymbols) {\r\n            const pos = node.getPosition();\r\n            node.setPosition(pos.x, pos.y - offset, pos.z);\r\n        }\r\n    }\r\n\r\n    // 回傳中線 Symbol 名稱（可作單線測試）\r\n    getResultSymbol(): string {\r\n        const step = this.symbolHeight + this.spacing;\r\n        for (let node of this.visibleSymbols) {\r\n            if (Math.abs(node.getPosition().y) < step / 2) {\r\n                return node.getComponent(Symbol).symbolName;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    // 回傳 [上, 中, 下] Symbol 名稱（給 SlotController 判斷五條線）\r\n    getSymbols(): string[] {\r\n        const result: string[] = [];\r\n        const step = this.symbolHeight + this.spacing;\r\n        const targetYs = [step * 1, 0, -step * 1]; // 上、中、下\r\n\r\n        for (let targetY of targetYs) {\r\n            for (let node of this.visibleSymbols) {\r\n                if (Math.abs(node.getPosition().y - targetY) < step / 2) {\r\n                    result.push(node.getComponent(Symbol).symbolName);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // 播放中獎動畫（row: 0=上, 1=中, 2=下）\r\n    public playWinEffectAtRow(rowIndex: number) {\r\n        const step = this.symbolHeight + this.spacing;\r\n        const targetY = step * (1 - rowIndex);\r\n\r\n        for (let node of this.visibleSymbols) {\r\n            if (Math.abs(node.getPosition().y - targetY) < step / 2) {\r\n                const symbol = node.getComponent(Symbol);\r\n                symbol?.playWinEffect();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { _decorator, Component, Node } from 'cc';\r\nimport { ReelView } from './ReelView';\r\nconst { ccclass, property } = _decorator;\r\n\r\n// 每個 symbol 對應中獎倍率\r\nconst symbolPayTable: Record<string, number> = {\r\n    M1: 2,\r\n    M2: 3,\r\n    M3: 5,\r\n    M4: 8,\r\n    M5: 10,\r\n    WILD: 15,\r\n    SC: 0\r\n};\r\n\r\n@ccclass('SlotController')\r\nexport class SlotController extends Component {\r\n    @property(Node) reel1: Node = null;\r\n    @property(Node) reel2: Node = null;\r\n    @property(Node) reel3: Node = null;\r\n\r\n    private isSpinning: boolean = false;\r\n\r\n    onSpinButtonClick() {\r\n        if (this.isSpinning) return;\r\n        this.isSpinning = true;\r\n        console.log('🎰 開始轉軸');\r\n\r\n        const r1 = this.reel1.getComponent(ReelView);\r\n        const r2 = this.reel2.getComponent(ReelView);\r\n        const r3 = this.reel3.getComponent(ReelView);\r\n\r\n        // 設定每軸速度與轉動秒數\r\n        r1.roundsPerSecond = 5;\r\n        r1.spinDuration = 1.5;\r\n\r\n        r2.roundsPerSecond = 4;\r\n        r2.spinDuration = 2.0;\r\n\r\n        r3.roundsPerSecond = 3;\r\n        r3.spinDuration = 2.5;\r\n\r\n        // 開始旋轉\r\n        r1.spin();\r\n        r2.spin();\r\n        r3.spin();\r\n\r\n        // 等待結束（保守估約 2.8 秒）\r\n        setTimeout(() => {\r\n            const [r1top, r1mid, r1bot] = r1.getSymbols();\r\n            const [r2top, r2mid, r2bot] = r2.getSymbols();\r\n            const [r3top, r3mid, r3bot] = r3.getSymbols();\r\n\r\n            const lineNames = ['上線', '中線', '下線', '↘斜線', '↗斜線'];\r\n            const allLines = [\r\n                [r1top, r2top, r3top],     // 上\r\n                [r1mid, r2mid, r3mid],     // 中\r\n                [r1bot, r2bot, r3bot],     // 下\r\n                [r1top, r2mid, r3bot],     // ↘\r\n                [r1bot, r2mid, r3top]      // ↗\r\n            ];\r\n\r\n            const rowMap = [0, 1, 2, 0, 2]; // 每條線對應的 Row 索引（↘↗ 需特別處理）\r\n            const winLines: string[] = [];\r\n            let totalWin = 0;\r\n\r\n            console.log('🎯 五線結果：');\r\n            console.log(`上線：${allLines[0].join(' | ')}`);\r\n            console.log(`中線：${allLines[1].join(' | ')}`);\r\n            console.log(`下線：${allLines[2].join(' | ')}`);\r\n            console.log(`↘斜線：${allLines[3].join(' | ')}`);\r\n            console.log(`↗斜線：${allLines[4].join(' | ')}`);\r\n\r\n            for (let i = 0; i < allLines.length; i++) {\r\n                const [s1, s2, s3] = allLines[i];\r\n\r\n                // 判斷是否同一組（支援 WILD）\r\n                const isSameOrWild = (a: string, b: string) =>\r\n                    a === b || a === 'WILD' || b === 'WILD';\r\n\r\n                const isWin = isSameOrWild(s1, s2) && isSameOrWild(s2, s3);\r\n\r\n                if (isWin) {\r\n                    winLines.push(lineNames[i]);\r\n\r\n                    // 找出中獎的主 Symbol 名稱（排除 WILD）\r\n                    const coreSymbol = [s1, s2, s3].find(s => s !== 'WILD') || 'WILD';\r\n                    const payout = symbolPayTable[coreSymbol] ?? 0;\r\n                    totalWin += payout;\r\n\r\n                    console.log(`⭐ ${lineNames[i]} → ${coreSymbol} × ${payout} 倍`);\r\n\r\n                    // 播放中獎動畫\r\n                    const rows = i < 3 ? [rowMap[i], rowMap[i], rowMap[i]]\r\n                              : i === 3 ? [0, 1, 2]  // ↘\r\n                              : [2, 1, 0];           // ↗\r\n\r\n                    const reels = [r1, r2, r3];\r\n                    for (let j = 0; j < 3; j++) {\r\n                        reels[j].playWinEffectAtRow(rows[j]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (winLines.length > 0) {\r\n                console.log(`🎉 中獎線：${winLines.join('、')}`);\r\n                console.log(`💰 總得分：${totalWin} 金幣`);\r\n            } else {\r\n                console.log('😢 沒中獎');\r\n            }\r\n\r\n            this.isSpinning = false;\r\n        }, 2800);\r\n    }\r\n}\r\n","import { _decorator, Component, Sprite, SpriteFrame, tween, UIOpacity } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Symbol')\r\nexport class Symbol extends Component {\r\n    @property({ type: Sprite })\r\n    public sprite: Sprite = null;\r\n\r\n    public symbolName: string = '';\r\n\r\n    public init(name: string, spriteFrame: SpriteFrame) {\r\n        this.symbolName = name;\r\n        this.sprite.spriteFrame = spriteFrame;\r\n    }\r\n\r\n    public playWinEffect() {\r\n        const uiOpacity = this.getComponent(UIOpacity) || this.addComponent(UIOpacity);\r\n        uiOpacity.opacity = 255;\r\n\r\n        tween(uiOpacity)\r\n            .repeat(6,\r\n                tween().to(0.15, { opacity: 50 })\r\n                      .to(0.15, { opacity: 255 })\r\n            )\r\n            .start();\r\n    }\r\n}\r\n"]}